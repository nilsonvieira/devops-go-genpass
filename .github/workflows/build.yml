name: Build Password Generator

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go mod init github.com/nilsonvieira/devops-go-genpass
          OUTPUT="genpass-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="$OUTPUT.exe"
          fi
          go build -v -o $OUTPUT .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: genpass-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            genpass-${{ matrix.goos }}-${{ matrix.goarch }}*
          if-no-files-found: error

  release:
    name: Upload Release Assets
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List artifacts
        run: ls -R

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: genpass-*/*